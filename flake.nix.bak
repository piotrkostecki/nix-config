{
  description = "Nix-Darwin configuration with Home Manager";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
    nix-darwin.url = "github:LnL7/nix-darwin";
    home-manager.url = "github:nix-community/home-manager";

    nix-darwin.inputs.nixpkgs.follows = "nixpkgs";
    home-manager.inputs.nixpkgs.follows = "nixpkgs";
  };

  outputs = { self, nixpkgs, nix-darwin, home-manager, ... }:
    let
      system = "aarch64-darwin"; # or "aarch64-darwin" for M1/M2
      username = "piotrkostecki";
      hostname = "MacBook-Air-Piotr";
    in {
      darwinConfigurations.${hostname} = nix-darwin.lib.darwinSystem {
        inherit system;
        specialArgs = { inherit self nixpkgs home-manager username; };

        modules = [
          {
            nixpkgs.config.allowUnfree = true;
            nix.settings.experimental-features = [ "nix-command" "flakes" ];

            system.stateVersion = 6;

            users.users.${username}.home = "/Users/${username}";
          }

          home-manager.darwinModules.home-manager
          {
            home-manager.useGlobalPkgs = true;
            home-manager.useUserPackages = true;
            home-manager.users.${username} = {
              home.stateVersion = "24.05";

              # example programs
              programs.zsh.enable = true;
              programs.git.enable = true;
              programs.bat.enable = true;
		  programs.neovim = {
		    enable = true;
		    viAlias = true;
		    vimAlias = true;
		    withNodeJs = true;   # useful for LSP and plugins
		    withPython3 = true;  # python plugins support
		  };
            };
          }
        ];
      };
    };
}
